#!/bin/bash

################################################################################
# 交易系统停止脚本
# 功能：优雅地停止交易系统
################################################################################

# 项目根目录
PROJECT_DIR="/Users/niningxi/Desktop/future"
cd "$PROJECT_DIR" || exit 1

# PID 文件
PID_FILE="$PROJECT_DIR/trading_system.pid"

# 日志文件
STDOUT_LOG="$PROJECT_DIR/logs/stdout.log"

################################################################################
# 颜色定义
################################################################################
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
NC='\033[0m' # No Color

################################################################################
# 函数：打印带颜色的消息
################################################################################
info() {
    echo -e "${GREEN}[INFO]${NC} $1"
}

warn() {
    echo -e "${YELLOW}[WARN]${NC} $1"
}

error() {
    echo -e "${RED}[ERROR]${NC} $1"
}

################################################################################
# 函数：检查进程是否运行
################################################################################
is_running() {
    if [ -f "$PID_FILE" ]; then
        PID=$(cat "$PID_FILE")
        if ps -p "$PID" > /dev/null 2>&1; then
            return 0  # 运行中
        else
            return 1  # 未运行
        fi
    else
        return 1  # 未运行
    fi
}

################################################################################
# 函数：停止系统
################################################################################
stop_system() {
    if ! is_running; then
        warn "交易系统未运行"
        # 清理可能残留的 PID 文件
        rm -f "$PID_FILE"
        exit 0
    fi
    
    PID=$(cat "$PID_FILE")
    info "正在停止交易系统 (PID: $PID)..."
    
    # 记录停止时间
    STOP_TIME=$(date '+%Y-%m-%d %H:%M:%S')
    echo "==================== 系统停止 ====================" >> "$STDOUT_LOG"
    echo "停止时间: $STOP_TIME" >> "$STDOUT_LOG"
    echo "=================================================" >> "$STDOUT_LOG"
    
    # 1. 首先尝试优雅停止（SIGTERM）
    kill -TERM "$PID" 2>/dev/null
    
    # 等待最多 30 秒让进程正常退出
    WAIT_TIME=30
    COUNT=0
    
    while is_running && [ $COUNT -lt $WAIT_TIME ]; do
        sleep 1
        COUNT=$((COUNT + 1))
        
        # 每5秒显示一次等待信息
        if [ $((COUNT % 5)) -eq 0 ]; then
            info "等待进程退出... ($COUNT/$WAIT_TIME 秒)"
        fi
    done
    
    # 2. 如果进程还在运行，强制终止（SIGKILL）
    if is_running; then
        warn "进程未能优雅退出，执行强制终止..."
        kill -KILL "$PID" 2>/dev/null
        sleep 2
    fi
    
    # 3. 最终检查
    if is_running; then
        error "✗ 无法停止进程 (PID: $PID)"
        exit 1
    else
        info "✓ 交易系统已停止"
        rm -f "$PID_FILE"
    fi
}

################################################################################
# 主程序
################################################################################
main() {
    echo "========================================"
    echo "   交易系统停止脚本"
    echo "========================================"
    echo
    
    stop_system
    
    echo
    echo "========================================"
}

# 执行主程序
main



